import { useState, useEffect } from "react";

import { Loader, Card, FormField } from "../components";

type CardProps = {
  data: [
    post?: {
      _id: string;
      name: string;
      prompt: string;
      photo: string;
    }
  ];
  title: string;
};

const RenderCards = ({ data, title }: CardProps): JSX.Element => {
  if (data?.length > 0) {
    return (
      <>
        {data.map((post) => {
          return <Card key={post?._id} {...post} />;
        })}
      </>
    );
  }

  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  );
};

export const Home = () => {
  const [loading, setLoading] = useState(false);
  // NEED TO TYPE allPosts data LATER
  const [allPosts, setAllPosts] = useState<any>(null);

  const [searchQuery, setSearchQuery] = useState("");

  const fetchPosts = async () => {
    setLoading(true);

    try {
      const response = await fetch("http://localhost:8080/api/v1/post", {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (response.ok) {
        const result = await response.json();
        setAllPosts(result.data.reverse());
      }
    } catch (err) {
      alert(err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">
          The Community Showcase
        </h1>
        <p className="mt-2 text-[#666e75] text-[16px] max-w[500px]">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI
        </p>
      </div>

      <div className="mt-16">
        <FormField
          type="text"
          labelName="Gallery"
          placeholder="Search..."
          name="gallery"
          value={searchQuery}
        />
      </div>

      <div className="mt-16">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchQuery && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing results for{" "}
                <span className="text-[#222328]">{searchQuery}</span>
              </h2>
            )}

            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchQuery ? (
                <RenderCards data={allPosts} title="No search results found" />
              ) : (
                <RenderCards data={allPosts} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};
